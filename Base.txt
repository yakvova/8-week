import math
import matplotlib.pyplot as plt

class Atom:
  
    a1 = 15.75
    a2 = 17.8
    a3 = 0.711
    a4 = 23.7
    a5 = 34

    def __init__(self, Z, A, name):
        self.Z = Z  
        self.A = A 
        self.name = name 
        self.N = A - Z  
        self.mass_deficit = None  
        self.yenergy = None  
        self.mass_value = None  
        self.radius_value = None  
        self.is_beta_stable = None  
        self.can_split = None  

    def energy(self):
       
        t1 = Atom.a1 * self.A
        t2 = Atom.a2 * (self.A ** (2 / 3))
        t3 = Atom.a3 * (self.Z ** 2) / (self.A ** (1 / 3))
        t4 = Atom.a4 * ((self.A - 2 * self.Z) ** 2) / self.A
        t5 = Atom.a5 / (self.A ** 0.75) if (self.Z % 2 == 0 and self.N % 2 == 0) else 0

        energy = t1 - t2 - t3 - t4 + t5
        self.yenergy = energy / self.A
        return energy

    def calculate_mass(self):
      
        mass_proton = 1.007825  
        mass_neutron = 1.008665  

        energy_mev = self.energy()
        mass_def = energy_mev / 931.5  
        self.mass_deficit = mass_def
        self.mass_value = self.Z * mass_proton + self.N * mass_neutron - mass_def
        return self.mass_value

    def calculate_radius(self):
      
        r0 = 1.25  
        self.radius_value = r0 * (self.A ** (1 / 3))
        return self.radius_value

    def check_beta(self):
       
        self.is_beta_stable = self.N / self.Z >= 1 and self.N / self.Z <= 1.6
        return self.is_beta_stable

    def check_even_splitting(self):
       
        self.can_split = self.A % 2 == 0 and self.Z % 2 == 0 and self.N % 2 == 0
        return self.can_split







